{"version":3,"sources":["script.js"],"names":["access_token","currentLang","paginatedlang","insertNode","getData","event","lang","document","getElementById","value","alert","getGithubData","fetchDataAPI","url","fetch","response","json","e","oauthToken","page","window","preventDefault","console","log","Headers","append","baseURL","headers","data","message","location","reload","fragment","createDocumentFragment","items","map","item","index","p","createCard","appendChild","innerHTML","pagination","total_count","getRepoData","owner","repo","getRepoIssues","createElement","element","createLabels","labels","str","label","name","trim","getRepoName","slice","lastIndexOf","replace","calculateDateDifference","oldDate","oneDay","currentDate","Date","prevDate","diffDays","Math","round","abs","myA","div","className","user","avatar_url","number","login","repository_url","updated_at","title","body","substring","getPagData","page_number","getAllPageNumber","limit","i","insertAfter","referenceNode","newNode","parentNode","insertBefore","nextSibling","onePage","total_page_number","ceil","paginate","id","replaceWith"],"mappings":"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","file":"bundle.js","sourceRoot":"","sourcesContent":["// const e = require(\"express\");\n//require('dotenv').config();\nvar access_token;\nvar currentLang = 'Javascript';\nvar paginatedlang = false; \nvar insertNode = false;\n//var key = process.env.key;\n//var secret =  process.env.secret;\n\n/*function init(lang = \"javascript\"){\n    console.log('asdsadsads', key, secret);\n    var timer = setInterval(function(){\n        if(access_token){\n            getGithubData(null, access_token, 1, lang);\n            hideBtn();\n            clearInterval(timer);\n        }\n    }, 1000);\n    getUserData();\n}*/\n\nfunction getData(event){\n    var lang = document.getElementById(\"list\").value;\n    document.getElementById('list').value = \"\";\n    if(currentLang !== lang) paginatedlang = false;\n    /*if(access_token === undefined){\n        init(lang);\n    } else {*/\n        if(lang === '') {\n            alert('Invalid Language');\n        } else {\n            getGithubData(event, access_token, 1, lang);\n        }\n    //}\n}\n\n\n/*function getUserData(){\n    let urlCode;\n    key = '67f6c11f68ab860e1472';\n    secret ='46210d09e9617a2e58f4c5c76432b39248b1ee78';\n    let redirect_url = 'http://localhost:8080';\n    let url = new URL(\"https://github.com/login/oauth/authorize?client_id=\"+key+\"&redirect_uri=\"+redirect_url);\n    let win = window.open(url, 'popUpWindow','height=400,width=600,left=10,top=10,scrollbars=yes,menubar=no');\n    win.onload = function(){\n        urlCode = win.location.href;\n        let code = new URL(urlCode).searchParams.get(\"code\");\n        fetch(`https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token?client_id=${key}&client_secret=${secret}&code=${code}`, {\n            method: \"POST\",\n            headers:{\"Accept\": \"application/json\"},\n            body:\"\"\n        }).then(function (resp) {\n            return resp.json();\n        }).then(function (data) {\n            access_token = data.access_token;\n            return data.access_token;\n        }).catch(function (err) {\n            return ('something went wrong', err);\n        });\n        win.close();\n    }\n}*/\n\nasync function fetchDataAPI(url){\n    let response = await fetch(url);\n    return await response.json();\n}\n\nasync function getGithubData(e, oauthToken, page, lang){\n    e = e || window.event;\n    e && e.preventDefault();\n    console.log('e', e)\n\n    //if(oauthToken !== undefined){\n        let headers = new Headers();\n        headers.append('Access-Control-Allow-Credentials', 'true');\n        //headers.append('Authorization', `token ${oauthToken}`)\n        let baseURL = `https://api.github.com/search/issues?q=label:good-first-issue+is:issue+is:open+language:${lang}&page=${page}&per_page=30`;\n        let data = await fetchDataAPI(baseURL, {\n            headers: new Headers({\n                'Access-Control-Allow-Credentials': 'true',\n                //'Authorization': `token ${oauthToken}`\n            })\n        });\n\n        console.log(data);\n        \n        if(data.message){\n            location.reload();\n        }\n        else {\n            const fragment = document.createDocumentFragment();\n\n            data.items.map((item, index) => {\n                let p = createCard(item);\n                fragment.appendChild(p);\n            });\n\n            if(page >= 1){\n                document.getElementById(\"result\").innerHTML = '';\n                document.getElementById(\"result\").appendChild(fragment);\n            }else {\n                document.getElementById(\"result\").appendChild(fragment);\n            }\n            if(!paginatedlang) pagination(data.total_count);\n       // }\n    }\n}\n\nasync function getRepoData(owner, repo){\n    return await fetchDataAPI(`https://api.github.com/repos/${owner}/${repo}`);\n}\n\nasync function getRepoIssues(owner, repo){\n    return await fetchDataAPI(`https://api.github.com/repos/${owner}/${repo}/issues`);\n}\n\nfunction createElement(element){\n    return document.createElement(element);\n}\n\nfunction createLabels(labels){\n    var str = '';\n    labels.map(label => {\n        str += (label.name) + ' ';\n    });\n    return str.trim();\n}\n\nfunction getRepoName(str){\n    return str.slice(str.lastIndexOf('/')).replace('/', '');\n}\n\nfunction calculateDateDifference(oldDate){\n    const oneDay = 24 * 60 * 60 * 1000;\n    const currentDate = new Date();\n    const prevDate = new Date(oldDate);\n    const diffDays = Math.round(Math.abs((currentDate - prevDate) / oneDay));\n    return diffDays;\n}\n\nfunction createCard(data){\n    let myA = createElement('a');\n    let div = createElement('div');\n    div.className = \"wrapper\"\n    div.innerHTML = `\n            <header class=\"page-header\">\n                <div class=\"circle\">\n                    <img src=${data.user.avatar_url} width=\"50px\" height=\"50px\"/>\n                </div>\n                <p>Issue: #${data.number}</p>\n            </header>\n            <main class=\"page-body\">\n                <div class=\"title\">\n                    <h4>${data.user.login}</h4>\n                    <div class=\"project\">\n                        <h3>${getRepoName(data.repository_url)}</h3>\n                        <p class=\"font\">Created ${calculateDateDifference(data.updated_at)} Days Ago</p>\n                    </div>\n                </div>\n                <div class=\"content\">\n                    <p>${data.title}</p>\n                    <div>${data.body === '' ? `${myA.innerHTML = 'Click Here'}` : data.body.substring(0, 100)}...</div>\n                </div>\n            </main>\n            <footer class=\"page-footer\">\n                <p>${createLabels(data.labels)}</p>\n            </footer>\n        `;\n    return div;\n}\n\nfunction getPagData (event, page_number){\n    getGithubData(event, access_token, page_number, currentLang)\n}\n\nfunction getAllPageNumber(limit){\n    var str = '';\n    for(var i=1; i<=limit; i++){\n        str += `<button class='page_number' onclick='getPagData(event, ${i})' >${i}</button>`;\n    }\n    return str.trim();\n}\n\nfunction insertAfter(referenceNode, newNode){\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n}\n\nfunction pagination(total_count){\n    var onePage = 30;\n    var total_page_number = Math.ceil(total_count / onePage);\n    page = total_page_number;\n    console.log(total_page_number, total_count);\n    paginatedlang = true;\n    var paginate = createElement('div');\n    paginate.className = 'pagination'\n    paginate.id = 'pagination'\n    paginate.innerHTML = `\n            ${getAllPageNumber(total_page_number)}\n    `;\n    var referenceNode = document.getElementById('result');\n    //referenceNode.parentNode.removeChild('paginate');\n    if(!insertNode){\n        insertNode = true;\n        insertAfter(referenceNode, paginate);\n    } else {\n        document.getElementById('pagination').replaceWith(paginate);\n    }\n}\n\n/*function hideBtn() {\n    document.getElementById('githubBtn').style.display = \"none\";\n}\n\nfunction switchBtn() {\n    var refresh = document.getElementById('githubBtn');\n    if(refresh.style.display === \"none\"){\n        refresh.innerText = \"Refresh\";\n        refresh.style.display = \"block\";\n    }\n}*/"]}